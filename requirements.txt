# Surface Cutting Optimizer - Professional Dependencies
# Free industrial-grade optimization libraries (replaces $50,000+/year commercial software)

# Core Optimization Libraries (Required)
ortools>=9.7.2963          # Google OR-Tools - Best for complex industrial problems (SCIP, CBC, GLOP)
mip>=1.15.0                # Python-MIP - Excellent for medium-scale problems with CBC solver
pulp>=2.7.0               # PuLP - Alternative LP library with CBC integration
scipy>=1.11.0             # SciPy - Scientific computing with optimization (fallback)
numpy>=1.24.0             # Numerical computing foundation

# Additional Free Solvers (Optional but Recommended)
cvxpy>=1.4.0              # CVXPY - Convex optimization with multiple solver backends
networkx>=3.1             # Network optimization problems

# Data Processing & I/O
pandas>=2.0.0             # Data manipulation and analysis
matplotlib>=3.7.0         # Plotting and visualization

# Development and Testing Dependencies
pytest>=7.4.0             # Modern testing framework
pytest-cov>=4.1.0         # Coverage reports for pytest
pytest-benchmark>=4.0.0   # Performance benchmarking
pytest-mock>=3.11.0       # Advanced mocking capabilities
pytest-xdist>=3.3.0       # Parallel test execution

# Code Quality Tools
black>=23.0.0             # Code formatting
flake8>=6.0.0             # Linting
mypy>=1.5.0               # Type checking

# Performance Monitoring
memory-profiler>=0.61.0   # Memory usage profiling
psutil>=5.9.0             # System resource monitoring

# Documentation
sphinx>=7.1.0            # Documentation generation
sphinx-rtd-theme>=1.3.0  # ReadTheDocs theme

# Note: All packages listed are 100% free and open source
# Total value: Replaces commercial optimization software worth $50,000-100,000/year
# 
# Installation options:
# 1. Standard installation: pip install -e . (installs all dependencies automatically)
# 2. Development mode:      pip install -r requirements.txt
# 3. Core only:             pip install ortools mip pulp scipy numpy
#
# Solver Capabilities:
# - OR-Tools: Complex industrial problems (1000+ pieces), proven in Google production
# - Python-MIP: Medium enterprise problems (100-1000 pieces), CBC solver backend  
# - PuLP: Alternative optimization with CBC, good for linear programming
# - SciPy: Fallback solver for simple problems, always available
# - CVXPY: Convex optimization, additional problem types
#
# Performance Comparison vs Commercial Software:
# ✅ OR-Tools performance rivals CPLEX/Gurobi on many problem types
# ✅ CBC (via Python-MIP/PuLP) competitive with commercial MIP solvers
# ✅ Zero licensing costs vs $70,000+/year for commercial solvers
# ✅ Full source access for customization and debugging 